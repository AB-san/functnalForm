{"version":3,"sources":["fire.js","Login.js","Hero.js","App.js","reportWebVitals.js","index.js"],"names":["fire","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","Login","props","email","setEmail","password","setPassword","handleLogin","handleSignup","hasAccount","setHasAccount","emailError","passwordError","className","type","autoFocus","required","value","onChange","e","target","onClick","Hero","handleLogout","useState","name","setName","dob","setDob","message","setMessage","database","placeholder","cols","rows","db","ref","dbval","push","App","user","setUser","setEmailError","setPasswordError","cleanErrors","authListener","auth","onAuthStateChanged","useEffect","signOut","signInWithEmailAndPassword","catch","err","code","createUserWithEmailAndPassword","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oNAceA,EAFFC,IAASC,cAVD,CACjBC,OAAQ,0CACRC,WAAY,wCACZC,UAAW,wBACXC,cAAe,oCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iB,OCsCJC,EA7CD,SAACC,GAEX,IACIC,EAUAD,EAVAC,MACAC,EASAF,EATAE,SACAC,EAQAH,EARAG,SACAC,EAOAJ,EAPAI,YACAC,EAMAL,EANAK,YACAC,EAKAN,EALAM,aACAC,EAIAP,EAJAO,WACAC,EAGAR,EAHAQ,cACAC,EAEAT,EAFAS,WACAC,EACAV,EADAU,cAEJ,OACI,yBAASC,UAAY,QAArB,SACI,sBAAKA,UAAY,iBAAjB,UACI,6CACA,uBAAOC,KAAK,OAAOC,WAAS,EAACC,UAAQ,EAACC,MAAOd,EAAOe,SAAU,SAACC,GAAD,OAAOf,EAASe,EAAEC,OAAOH,UACvF,mBAAGJ,UAAU,WAAb,SAAyBF,IACzB,6CACA,uBAAOG,KAAK,WAAWE,UAAQ,EAACC,MAAOZ,EAAUa,SAAU,SAACC,GAAD,OAAOb,EAAYa,EAAEC,OAAOH,UACvF,mBAAGJ,UAAU,WAAb,SAAyBD,IACzB,qBAAKC,UAAU,eAAf,SACKJ,EACG,qCACA,wBAAQY,QAASd,EAAjB,sBACA,uDACA,sBAAMc,QAAS,kBAAMX,GAAeD,IAApC,2BAIA,qCACA,wBAAQY,QAASb,EAAjB,qBACA,yDACA,sBAAMa,QAAS,kBAAMX,GAAeD,IAApC,mCCWTa,EA3CF,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aACb,EAAyBC,qBAAzB,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAuBF,qBAAvB,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAA+BJ,qBAA/B,mBAAOK,EAAP,KAAiBC,EAAjB,KAEIC,EAAWvC,IAASuC,WAWtB,OACI,0BAASlB,UAAU,OAAnB,UACI,gCACI,yCACA,wBAAQQ,QAASE,EAAjB,uBAGJ,sBAAKV,UAAU,MAAf,UACE,uBAAOA,UAAU,QAAjB,mBAAsC,uBACtC,uBAAOC,KAAK,OAAOkB,YAAY,kBAAkBf,MAAOQ,EACxDP,SAAU,SAACC,GAAD,OAAOO,EAAQP,EAAEC,OAAOH,UAClC,uBAAK,uBACL,uBAAOJ,UAAU,QAAjB,6BAAgD,uBAChD,uBAAOC,KAAK,MAAMkB,YAAY,iBAAiBf,MAAOU,EACtDT,SAAU,SAACC,GAAD,OAAOS,EAAOT,EAAEC,OAAOH,UACjC,uBAAK,uBACL,uBAAOJ,UAAU,QAAjB,sBAAyC,uBACzC,0BAAUC,KAAK,MAAMkB,YAAY,qBAAqBC,KAAK,KAAKC,KAAK,IAAIjB,MAAOY,EAChFX,SAAU,SAACC,GAAD,OAAOW,EAAWX,EAAEC,OAAOH,UACrC,uBAAK,uBACL,wBAAQI,QA7BP,WACX,IAAMc,EAAKJ,EAASK,IAAI,QAClBC,EAAO,CACXZ,KAAOA,EACPE,IAAMA,EACNE,QAAUA,GAEZM,EAAGG,KAAKD,IAsBE,2BC8DCE,G,MAjGH,WAEV,MAAwBf,mBAAS,IAAjC,mBAAOgB,EAAP,KAAaC,EAAb,KACA,EAA0BjB,mBAAS,IAAnC,mBAAOrB,EAAP,KAAcC,EAAd,KACA,EAAgCoB,mBAAS,IAAzC,mBAAOnB,EAAP,KAAiBC,EAAjB,KACA,EAAoCkB,mBAAS,IAA7C,mBAAOb,EAAP,KAAmB+B,EAAnB,KACA,EAA0ClB,mBAAS,IAAnD,mBAAOZ,EAAP,KAAsB+B,EAAtB,KACA,EAAoCnB,oBAAS,GAA7C,mBAAOf,EAAP,KAAmBC,EAAnB,KAOMkC,EAAc,WAClBF,EAAc,IACdC,EAAiB,KA4CTE,EAAe,WACnBtD,EAAKuD,OAAOC,oBAAmB,SAACP,GAC3BA,GApDTpC,EAAS,IACTE,EAAY,IAqDJmC,EAAQD,IAERC,EAAQ,QASlB,OAJIO,qBAAU,WACRH,MACA,IAGJ,qBAAKhC,UAAU,MAAf,SACC2B,EACC,cAAC,EAAD,CAAMjB,aAtBe,WACnBhC,EAAKuD,OAAOG,aAuBd,cAAC,EAAD,CACE9C,MAAOA,EACPC,SAAUA,EACVC,SAAUA,EACVC,YAAaA,EACbC,YAlEc,WAClBqC,IACArD,EACGuD,OACAI,2BAA2B/C,EAAOE,GAClC8C,OAAM,SAAAC,GACL,OAAOA,EAAIC,MACT,IAAK,qBACL,IAAK,qBACL,IAAK,sBACHX,EAAcU,EAAIvB,SAClB,MACF,IAAK,sBACHc,EAAiBS,EAAIvB,cAsDzBrB,aAhDiB,WACnBoC,IACArD,EACGuD,OACAQ,+BAA+BnD,EAAOE,GACtC8C,OAAM,SAACC,GACN,OAAOA,EAAIC,MACT,IAAK,4BACL,IAAK,qBACHX,EAAcU,EAAIvB,SAClB,MACF,IAAK,qBACHc,EAAiBS,EAAIvB,cAqC3BpB,WAAYA,EACZC,cAAeA,EACfC,WAAYA,EACZC,cAAeA,QCpFR2C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.9c11818e.chunk.js","sourcesContent":["import firebase from 'firebase';\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyB1TMo_-qr5DS0Wji_2AA-WLeF4apnzuZA\",\r\n    authDomain: \"potent-duality-295706.firebaseapp.com\",\r\n    projectId: \"potent-duality-295706\",\r\n    storageBucket: \"potent-duality-295706.appspot.com\",\r\n    messagingSenderId: \"996297820065\",\r\n    appId: \"1:996297820065:web:cc74a4ecfc4aba681eede0\",\r\n    measurementId: \"G-V58N6KHE9C\"\r\n  };\r\n\r\nconst fire = firebase.initializeApp(firebaseConfig);\r\n\r\nexport default fire;","import React from 'react';\r\n\r\nconst Login = (props) => {\r\n\r\n    const {\r\n        email,\r\n        setEmail,\r\n        password,\r\n        setPassword,\r\n        handleLogin,\r\n        handleSignup,\r\n        hasAccount,\r\n        setHasAccount,\r\n        emailError,\r\n        passwordError,\r\n    } = props;\r\n    return(\r\n        <section className = \"login\">\r\n            <div className = \"loginContainer\">\r\n                <label>Username</label>\r\n                <input type=\"text\" autoFocus required value={email} onChange={(e) => setEmail(e.target.value)}/>\r\n                <p className=\"errorMsg\">{emailError}</p>\r\n                <label>Password</label>\r\n                <input type=\"password\" required value={password} onChange={(e) => setPassword(e.target.value)}/>\r\n                <p className=\"errorMsg\">{passwordError}</p>\r\n                <div className=\"btnContainer\">\r\n                    {hasAccount ? (\r\n                        <>\r\n                        <button onClick={handleLogin}>Sign In </button>\r\n                        <p>Don't have an account? \r\n                        <span onClick={() => setHasAccount(!hasAccount)}>Sign Up</span>\r\n                        </p>\r\n                        </>\r\n                    ):(\r\n                        <>\r\n                        <button onClick={handleSignup}>Sign Up</button>\r\n                        <p>Already Have an account? \r\n                        <span onClick={() => setHasAccount(!hasAccount)}>Sign In</span>\r\n                        </p>\r\n                        </>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Login;","import {useState} from 'react';\r\nimport firebase from 'firebase';\r\n\r\n\r\n\r\nconst Hero = ({handleLogout}) => {\r\n  const [name , setName] = useState();\r\n  const [dob , setDob] = useState();\r\n  const [message , setMessage] = useState();\r\n\r\n  var database = firebase.database();\r\n\r\n  const Push = () => {\r\n    const db = database.ref(\"user\");\r\n    const dbval= {\r\n      name : name,\r\n      dob : dob,\r\n      message : message,\r\n    };\r\n    db.push(dbval);\r\n  };\r\n    return (\r\n        <section className=\"hero\">\r\n            <nav>\r\n                <h2>Welcome</h2>\r\n                <button onClick={handleLogout}>Logout</button>\r\n            </nav>\r\n            \r\n            <div className=\"box\">\r\n              <label className=\"label\">Name:</label><br/>\r\n              <input type=\"text\" placeholder=\"Enter your name\" value={name} \r\n              onChange={(e) => setName(e.target.value)}/>\r\n              <br/><br/>\r\n              <label className=\"label\">Date Of Birth :</label><br/>\r\n              <input type=\"dob\" placeholder=\"Enter your DOB\" value={dob} \r\n              onChange={(e) => setDob(e.target.value)}/>\r\n              <br/><br/>\r\n              <label className=\"label\">Message:</label><br/>\r\n              <textarea type=\"msg\" placeholder=\"Enter your Message\" cols=\"50\" rows=\"4\" value={message} \r\n              onChange={(e) => setMessage(e.target.value)}/>\r\n              <br/><br/>\r\n              <button onClick={Push}>Submit</button>\r\n            </div>\r\n         \r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Hero;","import React, { useState, useEffect } from \"react\";\nimport fire from \"./fire\";\nimport Login from \"./Login\";\nimport Hero from \"./Hero\";\nimport './App.css';\n\nconst App = () => {\n\n  const [user, setUser] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [emailError, setEmailError] = useState('');\n  const [passwordError, setPasswordError] = useState('');\n  const [hasAccount, setHasAccount] = useState(false);\n\n  const clearInputs = () => {\n    setEmail('');\n    setPassword('');\n  }\n\n  const cleanErrors = () => {\n    setEmailError('');\n    setPasswordError('');\n  }\n\n  const handleLogin = () => {\n    cleanErrors();\n    fire\n      .auth()\n      .signInWithEmailAndPassword(email, password)\n      .catch(err => {\n        switch(err.code){\n          case \"auth/invalid-email\":\n          case \"auth/user-disabled\":\n          case \"auth/user-not-found\":\n            setEmailError(err.message);\n            break;\n          case \"auth/wrong-password\":\n            setPasswordError(err.message);\n            break;\n        }\n      });\n    };\n\n    const handleSignup = () => {\n      cleanErrors();\n      fire\n        .auth()\n        .createUserWithEmailAndPassword(email, password)\n        .catch((err) => {\n          switch(err.code){\n            case \"auth/email-already-in-use\":\n            case \"auth/invalid-email\":\n              setEmailError(err.message);\n              break;\n            case \"auth/weak-password\":\n              setPasswordError(err.message);\n              break;\n          }\n        });\n      };\n\n      const handleLogout = () => {\n        fire.auth().signOut();\n      };\n\n      const authListener = () => {\n        fire.auth().onAuthStateChanged((user) => {\n          if(user){\n            clearInputs();\n            setUser(user);\n          } else {\n            setUser(\"\");\n          }\n        });\n      };\n\n      useEffect(() => {\n        authListener();\n      },[]);\n\n  return (\n    <div className=\"App\">\n    {user ? (\n      <Hero handleLogout={handleLogout} />\n    ):(\n      <Login\n        email={email}\n        setEmail={setEmail}\n        password={password}\n        setPassword={setPassword}\n        handleLogin={handleLogin}\n        handleSignup={handleSignup}\n        hasAccount={hasAccount}\n        setHasAccount={setHasAccount}\n        emailError={emailError}\n        passwordError={passwordError}\n      />\n    )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}